{"ast":null,"code":"var _jsxFileName = \"/Users/david-mb14/code/fleetsweep/src/components/CalculatorInputForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorInputForm = ({\n  onCalculate\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    frequency: 0,\n    sizeOfArea: 0,\n    stateOfLot: 0,\n    congestionFactor: 0,\n    discount: 0\n  });\n\n  // Options for dropdowns\n  const frequencyOptions = [{\n    value: 1,\n    label: 'Weekly'\n  }, {\n    value: 2,\n    label: 'Bi-Weekly'\n  }, {\n    value: 3,\n    label: 'Monthly'\n  }];\n  const stateOfLotOptions = [{\n    value: 1,\n    label: 'Clean'\n  }, {\n    value: 2,\n    label: 'Moderate Debris'\n  }, {\n    value: 3,\n    label: 'Heavy Debris'\n  }];\n  const congestionFactorOptions = [{\n    value: 1,\n    label: 'Low Congestion'\n  }, {\n    value: 2,\n    label: 'Moderate Congestion'\n  }, {\n    value: 3,\n    label: 'High Congestion'\n  }];\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: parseFloat(value) || 0\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onCalculate(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Frequency:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"frequency\",\n        value: formData.frequency,\n        onChange: handleInputChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Frequency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), frequencyOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Area Size (Acres):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"sizeOfArea\",\n        value: formData.sizeOfArea,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"State of Lot:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"stateOfLot\",\n        value: formData.stateOfLot,\n        onChange: handleInputChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select State of Lot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), stateOfLotOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Congestion Factor:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"congestionFactor\",\n        value: formData.congestionFactor,\n        onChange: handleInputChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Congestion Factor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), congestionFactorOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Discount %:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"discount\",\n        value: formData.discount,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CalculatorInputForm, \"u/+NSHhP6m38EJ1gnCTh+W2erV0=\");\n_c = CalculatorInputForm;\nexport default CalculatorInputForm;\nvar _c;\n$RefreshReg$(_c, \"CalculatorInputForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CalculatorInputForm","onCalculate","_s","formData","setFormData","frequency","sizeOfArea","stateOfLot","congestionFactor","discount","frequencyOptions","value","label","stateOfLotOptions","congestionFactorOptions","handleInputChange","event","name","target","parseFloat","handleSubmit","e","preventDefault","onSubmit","children","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","_c","$RefreshReg$"],"sources":["/Users/david-mb14/code/fleetsweep/src/components/CalculatorInputForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BidFormValues } from \"../types/types\";\n\ninterface CalculatorFormProps {\n  onCalculate: (inputData: BidFormValues) => void;\n}\n\nconst CalculatorInputForm: React.FC<CalculatorFormProps> = ({ onCalculate }) => {\n  const [formData, setFormData] = useState<BidFormValues>({\n    frequency: 0,\n    sizeOfArea: 0,\n    stateOfLot: 0,\n    congestionFactor: 0,\n    discount: 0,\n  });\n\n  // Options for dropdowns\n  const frequencyOptions = [\n    { value: 1, label: 'Weekly' },\n    { value: 2, label: 'Bi-Weekly' },\n    { value: 3, label: 'Monthly' },\n  ];\n\n  const stateOfLotOptions = [\n    { value: 1, label: 'Clean' },\n    { value: 2, label: 'Moderate Debris' },\n    { value: 3, label: 'Heavy Debris' },\n  ];\n\n  const congestionFactorOptions = [\n    { value: 1, label: 'Low Congestion' },\n    { value: 2, label: 'Moderate Congestion' },\n    { value: 3, label: 'High Congestion' },\n  ];\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: parseFloat(value) || 0 });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onCalculate(formData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {/* Frequency Dropdown */}\n      <label>\n        Frequency:\n        <select name=\"frequency\" value={formData.frequency} onChange={handleInputChange} required>\n          <option value=\"\">Select Frequency</option>\n          {frequencyOptions.map(option => (\n            <option key={option.value} value={option.value}>{option.label}</option>\n          ))}\n        </select>\n      </label>\n\n      {/* Area Size Input */}\n      <label>\n        Area Size (Acres):\n        <input\n          type=\"number\"\n          name=\"sizeOfArea\"\n          value={formData.sizeOfArea}\n          onChange={handleInputChange}\n          required\n        />\n      </label>\n\n      {/* State of Lot Dropdown */}\n      <label>\n        State of Lot:\n        <select name=\"stateOfLot\" value={formData.stateOfLot} onChange={handleInputChange} required>\n          <option value=\"\">Select State of Lot</option>\n          {stateOfLotOptions.map(option => (\n            <option key={option.value} value={option.value}>{option.label}</option>\n          ))}\n        </select>\n      </label>\n\n      {/* Congestion Factor Dropdown */}\n      <label>\n        Congestion Factor:\n        <select name=\"congestionFactor\" value={formData.congestionFactor} onChange={handleInputChange} required>\n          <option value=\"\">Select Congestion Factor</option>\n          {congestionFactorOptions.map(option => (\n            <option key={option.value} value={option.value}>{option.label}</option>\n          ))}\n        </select>\n      </label>\n\n      {/* Discount Input */}\n      <label>\n        Discount %:\n        <input\n          type=\"number\"\n          name=\"discount\"\n          value={formData.discount}\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <button type=\"submit\">Calculate</button>\n    </form>\n  );\n};\n\nexport default CalculatorInputForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}